#MYSQL
spring.datasource.url=jdbc:mysql://localhost:13309/tmoviesdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456

#JPA + Hibernate
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true
#update exist db, create new scheme and destroy previous data, nomarlly use update
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate = ERROR

# Cloudinary config
com.cloudinary.cloud_name=do69uspr8
com.cloudinary.api_key=757667574534588
com.cloudinary.api_secret=EbR1C_MKt8uo0ojZK-20plECI7w

##thymeleaf
#spring.thymeleaf.cache=false
#logging.level.org.hibernate.SQL= DEBUG
#logging.level.org.hibernate.type=TRACE
#

## SPRING SECURITY
# App Properties
app.jwtSecret= secretKey
app.jwtExpirationMs= 86400000

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=50MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=/src/main/resources/images